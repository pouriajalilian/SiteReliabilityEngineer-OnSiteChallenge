
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: flask-health-app-monitor
  labels:
    release: prometheus-stack # Match this label to your Prometheus installation's selector (often 'prometheus-stack' or 'kube-prometheus-stack')
spec:
  selector:
    matchLabels:
      app: flask-health-app # Selects the Service with this label
  endpoints:
  - port: http-metrics # This must match the 'name' of the port in your Service (flask-health-service.yaml)
    path: /metrics       # The path on your application where metrics are exposed
    interval: 30s        # How often Prometheus should scrape (e.g., every 30 seconds)
    scheme: http         # Protocol (http or https)
  namespaceSelector:
    matchNames:
      - default # Replace with the namespace where your Flask app Service is running




################## to test the app's metrics are being correctly scraped , we can use the bellow command:

1- First Forward Prometheus service Port, in that you can browse metrics and the scraped targes:
kubectl get svc ---- > The service name is :prometheus-operated ; so:

kubectl port-forward svc/prometheus-operated 9090:9090

2-Open another ssh session , try the following curl command:

curl http://localhost:9090/api/v1/targets | grep -i servicemon | grep flask


; you will see the endpoint related to the deployed app is present in targets.
